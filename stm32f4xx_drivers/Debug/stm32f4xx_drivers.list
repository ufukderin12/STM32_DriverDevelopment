
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000550  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006f8  08000700  00010700  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006f8  080006f8  00010700  2**0
                  CONTENTS
  4 .ARM          00000000  080006f8  080006f8  00010700  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006f8  08000700  00010700  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006f8  080006f8  000106f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006fc  080006fc  000106fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010700  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010700  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010700  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009cf  00000000  00000000  00010730  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000021d  00000000  00000000  000110ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b8  00000000  00000000  00011320  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000090  00000000  00000000  000113d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000012ed  00000000  00000000  00011468  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000d22  00000000  00000000  00012755  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00004e54  00000000  00000000  00013477  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  000182cb  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000224  00000000  00000000  00018320  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080006e0 	.word	0x080006e0

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080006e0 	.word	0x080006e0

080001e8 <delay>:

#include "stm32f407xx.h"

void delay(void);
void delay(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i<500000; i++);
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <delay+0x12>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a04      	ldr	r2, [pc, #16]	; (8000210 <delay+0x28>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d9f8      	bls.n	80001f4 <delay+0xc>
}
 8000202:	bf00      	nop
 8000204:	bf00      	nop
 8000206:	370c      	adds	r7, #12
 8000208:	46bd      	mov	sp, r7
 800020a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020e:	4770      	bx	lr
 8000210:	0007a11f 	.word	0x0007a11f

08000214 <main>:
int main(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b084      	sub	sp, #16
 8000218:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed;

	GpioLed.pGPIOx = GPIOD;
 800021a:	4b0d      	ldr	r3, [pc, #52]	; (8000250 <main+0x3c>)
 800021c:	607b      	str	r3, [r7, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800021e:	230c      	movs	r3, #12
 8000220:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000222:	2301      	movs	r3, #1
 8000224:	727b      	strb	r3, [r7, #9]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000226:	2302      	movs	r3, #2
 8000228:	72bb      	strb	r3, [r7, #10]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800022a:	2300      	movs	r3, #0
 800022c:	733b      	strb	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800022e:	2300      	movs	r3, #0
 8000230:	72fb      	strb	r3, [r7, #11]


	GPIO_PeriClockControl(GPIOD, ENABLE);
 8000232:	2101      	movs	r1, #1
 8000234:	4806      	ldr	r0, [pc, #24]	; (8000250 <main+0x3c>)
 8000236:	f000 f837 	bl	80002a8 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 800023a:	1d3b      	adds	r3, r7, #4
 800023c:	4618      	mov	r0, r3
 800023e:	f000 f881 	bl	8000344 <GPIO_Init>

	while(1)
	{
		GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_12);
 8000242:	210c      	movs	r1, #12
 8000244:	4802      	ldr	r0, [pc, #8]	; (8000250 <main+0x3c>)
 8000246:	f000 fa11 	bl	800066c <GPIO_ToggleOutputPin>
		delay();
 800024a:	f7ff ffcd 	bl	80001e8 <delay>
		GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_12);
 800024e:	e7f8      	b.n	8000242 <main+0x2e>
 8000250:	40020c00 	.word	0x40020c00

08000254 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000254:	480d      	ldr	r0, [pc, #52]	; (800028c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000256:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000258:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800025c:	480c      	ldr	r0, [pc, #48]	; (8000290 <LoopForever+0x6>)
  ldr r1, =_edata
 800025e:	490d      	ldr	r1, [pc, #52]	; (8000294 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000260:	4a0d      	ldr	r2, [pc, #52]	; (8000298 <LoopForever+0xe>)
  movs r3, #0
 8000262:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000264:	e002      	b.n	800026c <LoopCopyDataInit>

08000266 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000266:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000268:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800026a:	3304      	adds	r3, #4

0800026c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800026c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800026e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000270:	d3f9      	bcc.n	8000266 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000272:	4a0a      	ldr	r2, [pc, #40]	; (800029c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000274:	4c0a      	ldr	r4, [pc, #40]	; (80002a0 <LoopForever+0x16>)
  movs r3, #0
 8000276:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000278:	e001      	b.n	800027e <LoopFillZerobss>

0800027a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800027a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800027c:	3204      	adds	r2, #4

0800027e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800027e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000280:	d3fb      	bcc.n	800027a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000282:	f000 fa09 	bl	8000698 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000286:	f7ff ffc5 	bl	8000214 <main>

0800028a <LoopForever>:

LoopForever:
    b LoopForever
 800028a:	e7fe      	b.n	800028a <LoopForever>
  ldr   r0, =_estack
 800028c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000290:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000294:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000298:	08000700 	.word	0x08000700
  ldr r2, =_sbss
 800029c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002a0:	2000001c 	.word	0x2000001c

080002a4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a4:	e7fe      	b.n	80002a4 <ADC_IRQHandler>
	...

080002a8 <GPIO_PeriClockControl>:
/*
 * Peripheral Clock Setup
 */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002a8:	b480      	push	{r7}
 80002aa:	b083      	sub	sp, #12
 80002ac:	af00      	add	r7, sp, #0
 80002ae:	6078      	str	r0, [r7, #4]
 80002b0:	460b      	mov	r3, r1
 80002b2:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002b4:	78fb      	ldrb	r3, [r7, #3]
 80002b6:	2b01      	cmp	r3, #1
 80002b8:	d120      	bne.n	80002fc <GPIO_PeriClockControl+0x54>
	{
		if(pGPIOx == GPIOA){
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	4a1d      	ldr	r2, [pc, #116]	; (8000334 <GPIO_PeriClockControl+0x8c>)
 80002be:	4293      	cmp	r3, r2
 80002c0:	d106      	bne.n	80002d0 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 80002c2:	4b1d      	ldr	r3, [pc, #116]	; (8000338 <GPIO_PeriClockControl+0x90>)
 80002c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c6:	4a1c      	ldr	r2, [pc, #112]	; (8000338 <GPIO_PeriClockControl+0x90>)
 80002c8:	f043 0301 	orr.w	r3, r3, #1
 80002cc:	6313      	str	r3, [r2, #48]	; 0x30
			GPIOA_PCLK_DI();
		}else if(pGPIOx == GPIOB){
			GPIOB_PCLK_DI();
		}
	}
}
 80002ce:	e02a      	b.n	8000326 <GPIO_PeriClockControl+0x7e>
		}else if(pGPIOx == GPIOB){
 80002d0:	687b      	ldr	r3, [r7, #4]
 80002d2:	4a1a      	ldr	r2, [pc, #104]	; (800033c <GPIO_PeriClockControl+0x94>)
 80002d4:	4293      	cmp	r3, r2
 80002d6:	d106      	bne.n	80002e6 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002d8:	4b17      	ldr	r3, [pc, #92]	; (8000338 <GPIO_PeriClockControl+0x90>)
 80002da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002dc:	4a16      	ldr	r2, [pc, #88]	; (8000338 <GPIO_PeriClockControl+0x90>)
 80002de:	f043 0302 	orr.w	r3, r3, #2
 80002e2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002e4:	e01f      	b.n	8000326 <GPIO_PeriClockControl+0x7e>
		else if(pGPIOx == GPIOD){
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	4a15      	ldr	r2, [pc, #84]	; (8000340 <GPIO_PeriClockControl+0x98>)
 80002ea:	4293      	cmp	r3, r2
 80002ec:	d11b      	bne.n	8000326 <GPIO_PeriClockControl+0x7e>
			GPIOD_PCLK_EN();
 80002ee:	4b12      	ldr	r3, [pc, #72]	; (8000338 <GPIO_PeriClockControl+0x90>)
 80002f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f2:	4a11      	ldr	r2, [pc, #68]	; (8000338 <GPIO_PeriClockControl+0x90>)
 80002f4:	f043 0308 	orr.w	r3, r3, #8
 80002f8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002fa:	e014      	b.n	8000326 <GPIO_PeriClockControl+0x7e>
		if(pGPIOx == GPIOA){
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	4a0d      	ldr	r2, [pc, #52]	; (8000334 <GPIO_PeriClockControl+0x8c>)
 8000300:	4293      	cmp	r3, r2
 8000302:	d106      	bne.n	8000312 <GPIO_PeriClockControl+0x6a>
			GPIOA_PCLK_DI();
 8000304:	4b0c      	ldr	r3, [pc, #48]	; (8000338 <GPIO_PeriClockControl+0x90>)
 8000306:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000308:	4a0b      	ldr	r2, [pc, #44]	; (8000338 <GPIO_PeriClockControl+0x90>)
 800030a:	f023 0301 	bic.w	r3, r3, #1
 800030e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000310:	e009      	b.n	8000326 <GPIO_PeriClockControl+0x7e>
		}else if(pGPIOx == GPIOB){
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	4a09      	ldr	r2, [pc, #36]	; (800033c <GPIO_PeriClockControl+0x94>)
 8000316:	4293      	cmp	r3, r2
 8000318:	d105      	bne.n	8000326 <GPIO_PeriClockControl+0x7e>
			GPIOB_PCLK_DI();
 800031a:	4b07      	ldr	r3, [pc, #28]	; (8000338 <GPIO_PeriClockControl+0x90>)
 800031c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031e:	4a06      	ldr	r2, [pc, #24]	; (8000338 <GPIO_PeriClockControl+0x90>)
 8000320:	f023 0302 	bic.w	r3, r3, #2
 8000324:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000326:	bf00      	nop
 8000328:	370c      	adds	r7, #12
 800032a:	46bd      	mov	sp, r7
 800032c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000330:	4770      	bx	lr
 8000332:	bf00      	nop
 8000334:	40020000 	.word	0x40020000
 8000338:	40023800 	.word	0x40023800
 800033c:	40020400 	.word	0x40020400
 8000340:	40020c00 	.word	0x40020c00

08000344 <GPIO_Init>:

/*
 * Init Deinit
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000344:	b480      	push	{r7}
 8000346:	b087      	sub	sp, #28
 8000348:	af00      	add	r7, sp, #0
 800034a:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 800034c:	2300      	movs	r3, #0
 800034e:	617b      	str	r3, [r7, #20]
	//The non interrupt mode
	//1. configure the mode of gpio pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	795b      	ldrb	r3, [r3, #5]
 8000354:	2b03      	cmp	r3, #3
 8000356:	d81f      	bhi.n	8000398 <GPIO_Init+0x54>
	{
		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	795b      	ldrb	r3, [r3, #5]
 800035c:	461a      	mov	r2, r3
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	791b      	ldrb	r3, [r3, #4]
 8000362:	005b      	lsls	r3, r3, #1
 8000364:	fa02 f303 	lsl.w	r3, r2, r3
 8000368:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	681a      	ldr	r2, [r3, #0]
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	791b      	ldrb	r3, [r3, #4]
 8000374:	4619      	mov	r1, r3
 8000376:	2303      	movs	r3, #3
 8000378:	408b      	lsls	r3, r1
 800037a:	43db      	mvns	r3, r3
 800037c:	4619      	mov	r1, r3
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	681b      	ldr	r3, [r3, #0]
 8000382:	400a      	ands	r2, r1
 8000384:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	681b      	ldr	r3, [r3, #0]
 800038a:	6819      	ldr	r1, [r3, #0]
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	681b      	ldr	r3, [r3, #0]
 8000390:	697a      	ldr	r2, [r7, #20]
 8000392:	430a      	orrs	r2, r1
 8000394:	601a      	str	r2, [r3, #0]
 8000396:	e0c2      	b.n	800051e <GPIO_Init+0x1da>

	}else
	{
		//this part will code later. (Interrupt Mode)
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	795b      	ldrb	r3, [r3, #5]
 800039c:	2b04      	cmp	r3, #4
 800039e:	d117      	bne.n	80003d0 <GPIO_Init+0x8c>
		{
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003a0:	4b47      	ldr	r3, [pc, #284]	; (80004c0 <GPIO_Init+0x17c>)
 80003a2:	68db      	ldr	r3, [r3, #12]
 80003a4:	687a      	ldr	r2, [r7, #4]
 80003a6:	7912      	ldrb	r2, [r2, #4]
 80003a8:	4611      	mov	r1, r2
 80003aa:	2201      	movs	r2, #1
 80003ac:	408a      	lsls	r2, r1
 80003ae:	4611      	mov	r1, r2
 80003b0:	4a43      	ldr	r2, [pc, #268]	; (80004c0 <GPIO_Init+0x17c>)
 80003b2:	430b      	orrs	r3, r1
 80003b4:	60d3      	str	r3, [r2, #12]
			//clear RTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003b6:	4b42      	ldr	r3, [pc, #264]	; (80004c0 <GPIO_Init+0x17c>)
 80003b8:	689b      	ldr	r3, [r3, #8]
 80003ba:	687a      	ldr	r2, [r7, #4]
 80003bc:	7912      	ldrb	r2, [r2, #4]
 80003be:	4611      	mov	r1, r2
 80003c0:	2201      	movs	r2, #1
 80003c2:	408a      	lsls	r2, r1
 80003c4:	43d2      	mvns	r2, r2
 80003c6:	4611      	mov	r1, r2
 80003c8:	4a3d      	ldr	r2, [pc, #244]	; (80004c0 <GPIO_Init+0x17c>)
 80003ca:	400b      	ands	r3, r1
 80003cc:	6093      	str	r3, [r2, #8]
 80003ce:	e035      	b.n	800043c <GPIO_Init+0xf8>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	795b      	ldrb	r3, [r3, #5]
 80003d4:	2b05      	cmp	r3, #5
 80003d6:	d117      	bne.n	8000408 <GPIO_Init+0xc4>
		{
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003d8:	4b39      	ldr	r3, [pc, #228]	; (80004c0 <GPIO_Init+0x17c>)
 80003da:	689b      	ldr	r3, [r3, #8]
 80003dc:	687a      	ldr	r2, [r7, #4]
 80003de:	7912      	ldrb	r2, [r2, #4]
 80003e0:	4611      	mov	r1, r2
 80003e2:	2201      	movs	r2, #1
 80003e4:	408a      	lsls	r2, r1
 80003e6:	4611      	mov	r1, r2
 80003e8:	4a35      	ldr	r2, [pc, #212]	; (80004c0 <GPIO_Init+0x17c>)
 80003ea:	430b      	orrs	r3, r1
 80003ec:	6093      	str	r3, [r2, #8]
			//clear FTSR bit
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003ee:	4b34      	ldr	r3, [pc, #208]	; (80004c0 <GPIO_Init+0x17c>)
 80003f0:	68db      	ldr	r3, [r3, #12]
 80003f2:	687a      	ldr	r2, [r7, #4]
 80003f4:	7912      	ldrb	r2, [r2, #4]
 80003f6:	4611      	mov	r1, r2
 80003f8:	2201      	movs	r2, #1
 80003fa:	408a      	lsls	r2, r1
 80003fc:	43d2      	mvns	r2, r2
 80003fe:	4611      	mov	r1, r2
 8000400:	4a2f      	ldr	r2, [pc, #188]	; (80004c0 <GPIO_Init+0x17c>)
 8000402:	400b      	ands	r3, r1
 8000404:	60d3      	str	r3, [r2, #12]
 8000406:	e019      	b.n	800043c <GPIO_Init+0xf8>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	795b      	ldrb	r3, [r3, #5]
 800040c:	2b06      	cmp	r3, #6
 800040e:	d115      	bne.n	800043c <GPIO_Init+0xf8>
		{
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000410:	4b2b      	ldr	r3, [pc, #172]	; (80004c0 <GPIO_Init+0x17c>)
 8000412:	689b      	ldr	r3, [r3, #8]
 8000414:	687a      	ldr	r2, [r7, #4]
 8000416:	7912      	ldrb	r2, [r2, #4]
 8000418:	4611      	mov	r1, r2
 800041a:	2201      	movs	r2, #1
 800041c:	408a      	lsls	r2, r1
 800041e:	4611      	mov	r1, r2
 8000420:	4a27      	ldr	r2, [pc, #156]	; (80004c0 <GPIO_Init+0x17c>)
 8000422:	430b      	orrs	r3, r1
 8000424:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000426:	4b26      	ldr	r3, [pc, #152]	; (80004c0 <GPIO_Init+0x17c>)
 8000428:	68db      	ldr	r3, [r3, #12]
 800042a:	687a      	ldr	r2, [r7, #4]
 800042c:	7912      	ldrb	r2, [r2, #4]
 800042e:	4611      	mov	r1, r2
 8000430:	2201      	movs	r2, #1
 8000432:	408a      	lsls	r2, r1
 8000434:	4611      	mov	r1, r2
 8000436:	4a22      	ldr	r2, [pc, #136]	; (80004c0 <GPIO_Init+0x17c>)
 8000438:	430b      	orrs	r3, r1
 800043a:	60d3      	str	r3, [r2, #12]

		}

		//2. configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	791b      	ldrb	r3, [r3, #4]
 8000440:	089b      	lsrs	r3, r3, #2
 8000442:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	791b      	ldrb	r3, [r3, #4]
 8000448:	f003 0303 	and.w	r3, r3, #3
 800044c:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	4a1c      	ldr	r2, [pc, #112]	; (80004c4 <GPIO_Init+0x180>)
 8000454:	4293      	cmp	r3, r2
 8000456:	d045      	beq.n	80004e4 <GPIO_Init+0x1a0>
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	681b      	ldr	r3, [r3, #0]
 800045c:	4a1a      	ldr	r2, [pc, #104]	; (80004c8 <GPIO_Init+0x184>)
 800045e:	4293      	cmp	r3, r2
 8000460:	d02b      	beq.n	80004ba <GPIO_Init+0x176>
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	681b      	ldr	r3, [r3, #0]
 8000466:	4a19      	ldr	r2, [pc, #100]	; (80004cc <GPIO_Init+0x188>)
 8000468:	4293      	cmp	r3, r2
 800046a:	d024      	beq.n	80004b6 <GPIO_Init+0x172>
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	681b      	ldr	r3, [r3, #0]
 8000470:	4a17      	ldr	r2, [pc, #92]	; (80004d0 <GPIO_Init+0x18c>)
 8000472:	4293      	cmp	r3, r2
 8000474:	d01d      	beq.n	80004b2 <GPIO_Init+0x16e>
 8000476:	687b      	ldr	r3, [r7, #4]
 8000478:	681b      	ldr	r3, [r3, #0]
 800047a:	4a16      	ldr	r2, [pc, #88]	; (80004d4 <GPIO_Init+0x190>)
 800047c:	4293      	cmp	r3, r2
 800047e:	d016      	beq.n	80004ae <GPIO_Init+0x16a>
 8000480:	687b      	ldr	r3, [r7, #4]
 8000482:	681b      	ldr	r3, [r3, #0]
 8000484:	4a14      	ldr	r2, [pc, #80]	; (80004d8 <GPIO_Init+0x194>)
 8000486:	4293      	cmp	r3, r2
 8000488:	d00f      	beq.n	80004aa <GPIO_Init+0x166>
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	681b      	ldr	r3, [r3, #0]
 800048e:	4a13      	ldr	r2, [pc, #76]	; (80004dc <GPIO_Init+0x198>)
 8000490:	4293      	cmp	r3, r2
 8000492:	d008      	beq.n	80004a6 <GPIO_Init+0x162>
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	681b      	ldr	r3, [r3, #0]
 8000498:	4a11      	ldr	r2, [pc, #68]	; (80004e0 <GPIO_Init+0x19c>)
 800049a:	4293      	cmp	r3, r2
 800049c:	d101      	bne.n	80004a2 <GPIO_Init+0x15e>
 800049e:	2307      	movs	r3, #7
 80004a0:	e021      	b.n	80004e6 <GPIO_Init+0x1a2>
 80004a2:	2300      	movs	r3, #0
 80004a4:	e01f      	b.n	80004e6 <GPIO_Init+0x1a2>
 80004a6:	2306      	movs	r3, #6
 80004a8:	e01d      	b.n	80004e6 <GPIO_Init+0x1a2>
 80004aa:	2305      	movs	r3, #5
 80004ac:	e01b      	b.n	80004e6 <GPIO_Init+0x1a2>
 80004ae:	2304      	movs	r3, #4
 80004b0:	e019      	b.n	80004e6 <GPIO_Init+0x1a2>
 80004b2:	2303      	movs	r3, #3
 80004b4:	e017      	b.n	80004e6 <GPIO_Init+0x1a2>
 80004b6:	2302      	movs	r3, #2
 80004b8:	e015      	b.n	80004e6 <GPIO_Init+0x1a2>
 80004ba:	2301      	movs	r3, #1
 80004bc:	e013      	b.n	80004e6 <GPIO_Init+0x1a2>
 80004be:	bf00      	nop
 80004c0:	40013c00 	.word	0x40013c00
 80004c4:	40020000 	.word	0x40020000
 80004c8:	40020400 	.word	0x40020400
 80004cc:	40020800 	.word	0x40020800
 80004d0:	40020c00 	.word	0x40020c00
 80004d4:	40021000 	.word	0x40021000
 80004d8:	40021400 	.word	0x40021400
 80004dc:	40021800 	.word	0x40021800
 80004e0:	40021c00 	.word	0x40021c00
 80004e4:	2300      	movs	r3, #0
 80004e6:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 80004e8:	4b5d      	ldr	r3, [pc, #372]	; (8000660 <GPIO_Init+0x31c>)
 80004ea:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80004ec:	4a5c      	ldr	r2, [pc, #368]	; (8000660 <GPIO_Init+0x31c>)
 80004ee:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80004f2:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2*4);
 80004f4:	7c7a      	ldrb	r2, [r7, #17]
 80004f6:	7cbb      	ldrb	r3, [r7, #18]
 80004f8:	009b      	lsls	r3, r3, #2
 80004fa:	fa02 f103 	lsl.w	r1, r2, r3
 80004fe:	4a59      	ldr	r2, [pc, #356]	; (8000664 <GPIO_Init+0x320>)
 8000500:	7cfb      	ldrb	r3, [r7, #19]
 8000502:	3302      	adds	r3, #2
 8000504:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3. enable the exti interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000508:	4b57      	ldr	r3, [pc, #348]	; (8000668 <GPIO_Init+0x324>)
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	687a      	ldr	r2, [r7, #4]
 800050e:	7912      	ldrb	r2, [r2, #4]
 8000510:	4611      	mov	r1, r2
 8000512:	2201      	movs	r2, #1
 8000514:	408a      	lsls	r2, r1
 8000516:	4611      	mov	r1, r2
 8000518:	4a53      	ldr	r2, [pc, #332]	; (8000668 <GPIO_Init+0x324>)
 800051a:	430b      	orrs	r3, r1
 800051c:	6013      	str	r3, [r2, #0]

	}
	temp = 0;
 800051e:	2300      	movs	r3, #0
 8000520:	617b      	str	r3, [r7, #20]
	//2. configure the speed

	temp =  pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	799b      	ldrb	r3, [r3, #6]
 8000526:	461a      	mov	r2, r3
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	791b      	ldrb	r3, [r3, #4]
 800052c:	005b      	lsls	r3, r3, #1
 800052e:	fa02 f303 	lsl.w	r3, r2, r3
 8000532:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	689a      	ldr	r2, [r3, #8]
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	791b      	ldrb	r3, [r3, #4]
 800053e:	4619      	mov	r1, r3
 8000540:	2303      	movs	r3, #3
 8000542:	408b      	lsls	r3, r1
 8000544:	43db      	mvns	r3, r3
 8000546:	4619      	mov	r1, r3
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	681b      	ldr	r3, [r3, #0]
 800054c:	400a      	ands	r2, r1
 800054e:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	681b      	ldr	r3, [r3, #0]
 8000554:	6899      	ldr	r1, [r3, #8]
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	681b      	ldr	r3, [r3, #0]
 800055a:	697a      	ldr	r2, [r7, #20]
 800055c:	430a      	orrs	r2, r1
 800055e:	609a      	str	r2, [r3, #8]

	temp = 0;
 8000560:	2300      	movs	r3, #0
 8000562:	617b      	str	r3, [r7, #20]

	//3. configure the pupd settings

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	79db      	ldrb	r3, [r3, #7]
 8000568:	461a      	mov	r2, r3
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	791b      	ldrb	r3, [r3, #4]
 800056e:	005b      	lsls	r3, r3, #1
 8000570:	fa02 f303 	lsl.w	r3, r2, r3
 8000574:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	681b      	ldr	r3, [r3, #0]
 800057a:	68da      	ldr	r2, [r3, #12]
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	791b      	ldrb	r3, [r3, #4]
 8000580:	4619      	mov	r1, r3
 8000582:	2303      	movs	r3, #3
 8000584:	408b      	lsls	r3, r1
 8000586:	43db      	mvns	r3, r3
 8000588:	4619      	mov	r1, r3
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	681b      	ldr	r3, [r3, #0]
 800058e:	400a      	ands	r2, r1
 8000590:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	681b      	ldr	r3, [r3, #0]
 8000596:	68d9      	ldr	r1, [r3, #12]
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	697a      	ldr	r2, [r7, #20]
 800059e:	430a      	orrs	r2, r1
 80005a0:	60da      	str	r2, [r3, #12]

	temp = 0;
 80005a2:	2300      	movs	r3, #0
 80005a4:	617b      	str	r3, [r7, #20]

	//4. configure the optype

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	7a1b      	ldrb	r3, [r3, #8]
 80005aa:	461a      	mov	r2, r3
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	791b      	ldrb	r3, [r3, #4]
 80005b0:	fa02 f303 	lsl.w	r3, r2, r3
 80005b4:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	681b      	ldr	r3, [r3, #0]
 80005ba:	685a      	ldr	r2, [r3, #4]
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	791b      	ldrb	r3, [r3, #4]
 80005c0:	4619      	mov	r1, r3
 80005c2:	2303      	movs	r3, #3
 80005c4:	408b      	lsls	r3, r1
 80005c6:	43db      	mvns	r3, r3
 80005c8:	4619      	mov	r1, r3
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	681b      	ldr	r3, [r3, #0]
 80005ce:	400a      	ands	r2, r1
 80005d0:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	681b      	ldr	r3, [r3, #0]
 80005d6:	6859      	ldr	r1, [r3, #4]
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	697a      	ldr	r2, [r7, #20]
 80005de:	430a      	orrs	r2, r1
 80005e0:	605a      	str	r2, [r3, #4]

	temp = 0;
 80005e2:	2300      	movs	r3, #0
 80005e4:	617b      	str	r3, [r7, #20]

	//5. configure the alt functionalty
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	795b      	ldrb	r3, [r3, #5]
 80005ea:	2b02      	cmp	r3, #2
 80005ec:	d131      	bne.n	8000652 <GPIO_Init+0x30e>
	{
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	791b      	ldrb	r3, [r3, #4]
 80005f2:	08db      	lsrs	r3, r3, #3
 80005f4:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	791b      	ldrb	r3, [r3, #4]
 80005fa:	f003 0307 	and.w	r3, r3, #7
 80005fe:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));// clearing
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	681b      	ldr	r3, [r3, #0]
 8000604:	7c3a      	ldrb	r2, [r7, #16]
 8000606:	3208      	adds	r2, #8
 8000608:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800060c:	7bfb      	ldrb	r3, [r7, #15]
 800060e:	009b      	lsls	r3, r3, #2
 8000610:	220f      	movs	r2, #15
 8000612:	fa02 f303 	lsl.w	r3, r2, r3
 8000616:	43db      	mvns	r3, r3
 8000618:	4618      	mov	r0, r3
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	681b      	ldr	r3, [r3, #0]
 800061e:	7c3a      	ldrb	r2, [r7, #16]
 8000620:	4001      	ands	r1, r0
 8000622:	3208      	adds	r2, #8
 8000624:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	681b      	ldr	r3, [r3, #0]
 800062c:	7c3a      	ldrb	r2, [r7, #16]
 800062e:	3208      	adds	r2, #8
 8000630:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000634:	687b      	ldr	r3, [r7, #4]
 8000636:	7a5b      	ldrb	r3, [r3, #9]
 8000638:	461a      	mov	r2, r3
 800063a:	7bfb      	ldrb	r3, [r7, #15]
 800063c:	009b      	lsls	r3, r3, #2
 800063e:	fa02 f303 	lsl.w	r3, r2, r3
 8000642:	4618      	mov	r0, r3
 8000644:	687b      	ldr	r3, [r7, #4]
 8000646:	681b      	ldr	r3, [r3, #0]
 8000648:	7c3a      	ldrb	r2, [r7, #16]
 800064a:	4301      	orrs	r1, r0
 800064c:	3208      	adds	r2, #8
 800064e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 8000652:	bf00      	nop
 8000654:	371c      	adds	r7, #28
 8000656:	46bd      	mov	sp, r7
 8000658:	f85d 7b04 	ldr.w	r7, [sp], #4
 800065c:	4770      	bx	lr
 800065e:	bf00      	nop
 8000660:	40023800 	.word	0x40023800
 8000664:	40013800 	.word	0x40013800
 8000668:	40013c00 	.word	0x40013c00

0800066c <GPIO_ToggleOutputPin>:
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value)
{
	pGPIOx->ODR = Value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800066c:	b480      	push	{r7}
 800066e:	b083      	sub	sp, #12
 8000670:	af00      	add	r7, sp, #0
 8000672:	6078      	str	r0, [r7, #4]
 8000674:	460b      	mov	r3, r1
 8000676:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<< PinNumber);
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	695b      	ldr	r3, [r3, #20]
 800067c:	78fa      	ldrb	r2, [r7, #3]
 800067e:	2101      	movs	r1, #1
 8000680:	fa01 f202 	lsl.w	r2, r1, r2
 8000684:	405a      	eors	r2, r3
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	615a      	str	r2, [r3, #20]
}
 800068a:	bf00      	nop
 800068c:	370c      	adds	r7, #12
 800068e:	46bd      	mov	sp, r7
 8000690:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000694:	4770      	bx	lr
	...

08000698 <__libc_init_array>:
 8000698:	b570      	push	{r4, r5, r6, lr}
 800069a:	4d0d      	ldr	r5, [pc, #52]	; (80006d0 <__libc_init_array+0x38>)
 800069c:	4c0d      	ldr	r4, [pc, #52]	; (80006d4 <__libc_init_array+0x3c>)
 800069e:	1b64      	subs	r4, r4, r5
 80006a0:	10a4      	asrs	r4, r4, #2
 80006a2:	2600      	movs	r6, #0
 80006a4:	42a6      	cmp	r6, r4
 80006a6:	d109      	bne.n	80006bc <__libc_init_array+0x24>
 80006a8:	4d0b      	ldr	r5, [pc, #44]	; (80006d8 <__libc_init_array+0x40>)
 80006aa:	4c0c      	ldr	r4, [pc, #48]	; (80006dc <__libc_init_array+0x44>)
 80006ac:	f000 f818 	bl	80006e0 <_init>
 80006b0:	1b64      	subs	r4, r4, r5
 80006b2:	10a4      	asrs	r4, r4, #2
 80006b4:	2600      	movs	r6, #0
 80006b6:	42a6      	cmp	r6, r4
 80006b8:	d105      	bne.n	80006c6 <__libc_init_array+0x2e>
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f855 3b04 	ldr.w	r3, [r5], #4
 80006c0:	4798      	blx	r3
 80006c2:	3601      	adds	r6, #1
 80006c4:	e7ee      	b.n	80006a4 <__libc_init_array+0xc>
 80006c6:	f855 3b04 	ldr.w	r3, [r5], #4
 80006ca:	4798      	blx	r3
 80006cc:	3601      	adds	r6, #1
 80006ce:	e7f2      	b.n	80006b6 <__libc_init_array+0x1e>
 80006d0:	080006f8 	.word	0x080006f8
 80006d4:	080006f8 	.word	0x080006f8
 80006d8:	080006f8 	.word	0x080006f8
 80006dc:	080006fc 	.word	0x080006fc

080006e0 <_init>:
 80006e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006e2:	bf00      	nop
 80006e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006e6:	bc08      	pop	{r3}
 80006e8:	469e      	mov	lr, r3
 80006ea:	4770      	bx	lr

080006ec <_fini>:
 80006ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006ee:	bf00      	nop
 80006f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006f2:	bc08      	pop	{r3}
 80006f4:	469e      	mov	lr, r3
 80006f6:	4770      	bx	lr
